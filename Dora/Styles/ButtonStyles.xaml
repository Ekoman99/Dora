<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp">

    <Style x:Key="LoginButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="250"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Margin" Value="0,25"/>
        <Setter Property="Content" Value="Login"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="LoginBorder" Background="{TemplateBinding Background}"
                                            CornerRadius="16">
                        <ContentPresenter HorizontalAlignment="Center" 
                                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AliceBlue" TargetName="LoginBorder"  />
                            <Setter Property="TextBlock.Foreground" Value="Black"  TargetName="LoginBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="WarningButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Content" Value="Okay"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="LoginBorder" Background="{TemplateBinding Background}"
                                        CornerRadius="16">
                        <ContentPresenter HorizontalAlignment="Center" 
                                                      VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="AliceBlue" TargetName="LoginBorder"  />
                            <Setter Property="TextBlock.Foreground" Value="Black"  TargetName="LoginBorder" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="menuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#707db2"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="#6673b7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="Transparent">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#bccaf1"/>
                <Setter Property="Tag" Value="#7071f0"/>
                <Setter Property="Background">
                    <Setter.Value>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#31407b" Offset="0"/>
                            <GradientStop Color="#495385" Offset="3"/>
                        </LinearGradientBrush>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#a5a1f5">
                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="menuButtonIcon" TargetType="fa:IconImage">
        <Setter Property="Width" Value="23"/>
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="35 0 20 0"/>
        <Setter Property="Foreground" Value="{Binding Path=Tag,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="menuButtonText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
    </Style>

    <Style x:Key="menuButtonActive" TargetType="Button">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                    <GradientStop Color="#31407b" Offset="0"/>
                    <GradientStop Color="#495385" Offset="3"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#bccaf1"/>
        <Setter Property="Margin" Value="0 0 0 5"/>
        <Setter Property="Height" Value="45"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="#7071f0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" BorderThickness="4 0 0 0" BorderBrush="#a5a1f5">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="topMenuButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#9eabe2"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="#6673b7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0 0 0 0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5b60c4"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="topMenuButtonRight" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#9eabe2"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="50"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Tag" Value="#6673b7"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="0 10 0 0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#5b60c4"/>
                <Setter Property="Foreground" Value="#ffffff"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CustomToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <!-- Gray background -->
                        <Rectangle x:Name="Background" Fill="Gray" RadiusX="10" RadiusY="10"/>
                        <!-- Pink highlight -->
                        <Rectangle x:Name="Highlight" Fill="Transparent" RadiusX="10" RadiusY="10"/>
                        <!-- Circle -->
                        <Ellipse x:Name="Circle" Fill="Transparent" Stroke="Pink" StrokeThickness="2" HorizontalAlignment="Left" Margin="5"/>
                        <!-- Text -->
                        <TextBlock x:Name="TextBlock" Text="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Toggle Button Checked state -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Background" Property="Fill" Value="Pink"/>
                            <Setter TargetName="Highlight" Property="Fill" Value="Pink"/>
                            <Setter TargetName="Circle" Property="HorizontalAlignment" Value="Right"/>
                        </Trigger>
                        <!-- Mouse over state -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Background" Property="Fill" Value="LightGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>